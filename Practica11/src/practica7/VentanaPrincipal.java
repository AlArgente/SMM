/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica7;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Shape;
import java.awt.Transparency;
import java.awt.color.ColorSpace;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import sm.aadcg.image.SepiaOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import sm.aadcg.graficos.ColorCellRender;
import sm.aadcg.graficos.LookupTableExtension;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;

/**
 *
 * @author alberto
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    private BufferedImage imgOrigen;
    private int brillo = 0;
    private Point vi_p = new Point(0,0);
    private int size_vi_a = 300;
    private int size_vi_b = 300;
    private int grados = 0;
    private float patronDiscontinuidad[] = {15.0f, 15.0f};
    private Shape clipArea;
    public VentanaPrincipal() {
        initComponents();
        this.setSize(1024, 720);
        this.jCheckBoxMenuItem1.setSelected(true);
        // this.jPanel4.setVisible(false);
        nuevo.setToolTipText("Nuevo");
        open.setToolTipText("Abrir");
        save.setToolTipText("Guardar");
        jToggleButton1.setToolTipText("Punto");
        jToggleButton2.setToolTipText("Línea");
        jToggleButton3.setToolTipText("Rectángulo");
        jToggleButton4.setToolTipText("Elipse");
        jToggleButton11.setToolTipText("Editar");
        jToggleButton12.setToolTipText("Rellenar");
        jToggleButton13.setToolTipText("Transparencia");
        jToggleButton14.setToolTipText("Alisar");
        jSpinner2.setToolTipText("Grosor");
        jComboBox1.setToolTipText("Color");
        this.setLocationRelativeTo(null);
    }

    public VentanaInterna getVentanaInterna() {
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (vi != null) {
            return vi;
        } 
        return null;
    }
    public void set_vi_size(int a, int b) {
        this.size_vi_a = a;
        this.size_vi_b = b;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        nuevo = new javax.swing.JButton();
        open = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton11 = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        Color c[] = {Color.BLACK, Color.WHITE, Color.RED, Color.YELLOW, Color.BLUE, Color.GREEN};
        jComboBox1 = new javax.swing.JComboBox<>(c);
        jSpinner2 = new javax.swing.JSpinner();
        jToggleButton12 = new javax.swing.JToggleButton();
        jToggleButton13 = new javax.swing.JToggleButton();
        jToggleButton14 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jPanel3 = new javax.swing.JPanel();
        sliderBrillo = new javax.swing.JSlider();
        jPanel5 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        contraste = new javax.swing.JButton();
        iluminar = new javax.swing.JButton();
        oscurecer = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        sinosoidal = new javax.swing.JButton();
        sepia = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        bandas = new javax.swing.JButton();
        espaciocolor = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newItem = new javax.swing.JMenuItem();
        abrirItem = new javax.swing.JMenuItem();
        guardarItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        imageData = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuLookUpOp = new javax.swing.JMenuItem();
        jMenuAffineTransformOp = new javax.swing.JMenuItem();
        bandCombineOp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);

        nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        nuevo.setFocusable(false);
        nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        nuevo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nuevoKeyPressed(evt);
            }
        });
        jToolBar1.add(nuevo);

        open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        open.setFocusable(false);
        open.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        open.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jToolBar1.add(open);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        save.setFocusable(false);
        save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jToolBar1.add(save);
        jToolBar1.add(jSeparator2);

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/punto.png"))); // NOI18N
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton1);

        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/linea.png"))); // NOI18N
        jToggleButton2.setFocusable(false);
        jToggleButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton2);

        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rectangulo.png"))); // NOI18N
        jToggleButton3.setFocusable(false);
        jToggleButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton3);

        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elipse.png"))); // NOI18N
        jToggleButton4.setFocusable(false);
        jToggleButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton4);

        jToggleButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/seleccion.png"))); // NOI18N
        jToggleButton11.setFocusable(false);
        jToggleButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton11);
        jToolBar1.add(jSeparator1);

        jComboBox1.setRenderer(new ColorCellRender());
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jComboBox1);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jSpinner2.setMaximumSize(new java.awt.Dimension(38, 26));
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });
        jToolBar1.add(jSpinner2);

        jToggleButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rellenar.png"))); // NOI18N
        jToggleButton12.setFocusable(false);
        jToggleButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton12ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton12);

        jToggleButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/transparencia.png"))); // NOI18N
        jToggleButton13.setFocusable(false);
        jToggleButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton13ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton13);

        jToggleButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/alisar.png"))); // NOI18N
        jToggleButton14.setFocusable(false);
        jToggleButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton14ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton14);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jToolBar2.setRollover(true);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Brillo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        sliderBrillo.setMaximum(255);
        sliderBrillo.setMinimum(-255);
        sliderBrillo.setValue(0);
        sliderBrillo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderBrilloStateChanged(evt);
            }
        });
        sliderBrillo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sliderBrilloFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sliderBrilloFocusLost(evt);
            }
        });
        jPanel3.add(sliderBrillo);

        jToolBar2.add(jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Media", "Binomial", "Enfoque", "Relieve", "Fronteras" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel5.add(jComboBox2);

        jToolBar2.add(jPanel5);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contraste", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        contraste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/contraste.png"))); // NOI18N
        contraste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrasteActionPerformed(evt);
            }
        });
        jPanel6.add(contraste);

        iluminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iluminar.png"))); // NOI18N
        iluminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iluminarActionPerformed(evt);
            }
        });
        jPanel6.add(iluminar);

        oscurecer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/oscurecer.png"))); // NOI18N
        oscurecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oscurecerActionPerformed(evt);
            }
        });
        jPanel6.add(oscurecer);

        jToolBar2.add(jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        sinosoidal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sinusoidal.png"))); // NOI18N
        sinosoidal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinosoidalActionPerformed(evt);
            }
        });
        jPanel7.add(sinosoidal);

        sepia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sepia.png"))); // NOI18N
        sepia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sepiaActionPerformed(evt);
            }
        });
        jPanel7.add(sepia);

        jToolBar2.add(jPanel7);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Color", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        bandas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/bandas.png"))); // NOI18N
        bandas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bandasActionPerformed(evt);
            }
        });
        jPanel10.add(bandas);

        espaciocolor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "sRGB", "YCC", "GREY" }));
        espaciocolor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                espaciocolorActionPerformed(evt);
            }
        });
        jPanel10.add(espaciocolor);

        jToolBar2.add(jPanel10);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rotación", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        jSlider1.setMajorTickSpacing(360);
        jSlider1.setMaximum(360);
        jSlider1.setMinorTickSpacing(90);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(0);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jSlider1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSlider1FocusGained(evt);
            }
        });
        jPanel8.add(jSlider1);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion90.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion180.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion270.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton7);

        jToolBar2.add(jPanel8);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Escala", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/aumentar.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton8);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/disminuir.png"))); // NOI18N
        jButton9.setToolTipText("");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton9);

        jToolBar2.add(jPanel9);

        jPanel2.add(jToolBar2, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Barra de estado");
        jPanel4.add(jLabel1, java.awt.BorderLayout.WEST);

        jLabel2.setText("CoordenadasMouse");
        jPanel4.add(jLabel2, java.awt.BorderLayout.EAST);

        jPanel2.add(jPanel4, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        escritorio.setMinimumSize(new java.awt.Dimension(300, 300));
        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Archivo");

        newItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK));
        newItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        newItem.setText("Nuevo");
        newItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newItemActionPerformed(evt);
            }
        });
        jMenu1.add(newItem);
        newItem.getAccessibleContext().setAccessibleDescription("");

        abrirItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        abrirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        abrirItem.setText("Abrir");
        abrirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirItemActionPerformed(evt);
            }
        });
        jMenu1.add(abrirItem);
        abrirItem.getAccessibleContext().setAccessibleName("abrirItem");

        guardarItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        guardarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        guardarItem.setText("Guardar");
        guardarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarItemActionPerformed(evt);
            }
        });
        jMenu1.add(guardarItem);
        guardarItem.getAccessibleContext().setAccessibleName("guardarItem");

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ver");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Barra de estados");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Barra de formas");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("Barra de atributos");
        jCheckBoxMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem3);

        jMenuBar1.add(jMenu2);

        imageData.setText("Imagen");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Tamaño nueva imagen");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        imageData.add(jMenuItem2);

        jMenuLookUpOp.setText("LookUpOp");
        jMenuLookUpOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLookUpOpActionPerformed(evt);
            }
        });
        imageData.add(jMenuLookUpOp);

        jMenuAffineTransformOp.setText("“AffineTransformOp”");
        jMenuAffineTransformOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAffineTransformOpActionPerformed(evt);
            }
        });
        imageData.add(jMenuAffineTransformOp);

        bandCombineOp.setText("BandCombineOp");
        bandCombineOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bandCombineOpActionPerformed(evt);
            }
        });
        imageData.add(bandCombineOp);

        jMenuBar1.add(imageData);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newItemActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna(this);
        this.escritorio.add(vi);
        VentanaInterna vi2;
        vi2 = (VentanaInterna)escritorio.getSelectedFrame();
        if (vi2 != null) {
            vi_p = vi2.getLocation();
            vi_p.setLocation(vi_p.x+15, vi_p.y+15);
            vi.setLocation(vi_p);
        } 
        vi.setVisible(true);
        BufferedImage img;
        // img = new BufferedImage(300,300, BufferedImage.TYPE_INT_ARGB);
        img = new BufferedImage(size_vi_a, size_vi_b, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2dvp = img.createGraphics();
        g2dvp.setPaint(Color.WHITE);
        g2dvp.fillRect(0, 0, img.getWidth(), img.getHeight());
        vi.getLienzo().setImage(img);
    }//GEN-LAST:event_newItemActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if (this.jToggleButton1.isSelected()) {
            VentanaInterna vi;
            vi = (VentanaInterna)escritorio.getSelectedFrame();
            this.jToggleButton2.setSelected(false);
            this.jToggleButton3.setSelected(false);
            this.jToggleButton4.setSelected(false);
            this.jToggleButton11.setSelected(false);
            vi.getLienzo().set_editar(false);
            vi.getLienzo().set_modo_dibujo("punto");
            this.jLabel1.setText("Punto");
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        if (this.jToggleButton2.isSelected()) {
            VentanaInterna vi;
            vi = (VentanaInterna)escritorio.getSelectedFrame();
            this.jToggleButton1.setSelected(false);
            this.jToggleButton3.setSelected(false);
            this.jToggleButton4.setSelected(false);
            this.jToggleButton11.setSelected(false);
            vi.getLienzo().set_editar(false);
            vi.getLienzo().set_modo_dibujo("linea");
            this.jLabel1.setText("Línea");
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        if (this.jToggleButton3.isSelected()) {
            VentanaInterna vi;
            vi = (VentanaInterna)escritorio.getSelectedFrame();
            this.jToggleButton2.setSelected(false);
            this.jToggleButton1.setSelected(false);
            this.jToggleButton4.setSelected(false);
            this.jToggleButton11.setSelected(false);
            vi.getLienzo().set_editar(false);
            vi.getLienzo().set_modo_dibujo("rectangulo");
            this.jLabel1.setText("Rectángulo");
        }
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        
        if (this.jToggleButton4.isSelected()) {
            this.jToggleButton2.setSelected(false);
            this.jToggleButton3.setSelected(false);
            this.jToggleButton1.setSelected(false);
            this.jToggleButton11.setSelected(false);
            vi.getLienzo().set_editar(false);
            vi.getLienzo().set_modo_dibujo("ellipse");
            this.jLabel1.setText("Elipse");
        }
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void guardarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarItemActionPerformed
        // TODO add your handling code here:
        // Saving file
        VentanaInterna vi=(VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Imágenes(.jpg)", "jpg");
            dlg.setFileFilter(filter);
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = new File(dlg.getSelectedFile()+".jpg");
                        ImageIO.write(img, "jpg", f);
                        vi.setTitle(f.getName());
                    }
                }catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_guardarItemActionPerformed

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna(this);
        this.escritorio.add(vi);
        VentanaInterna vi2;
        vi2 = (VentanaInterna)escritorio.getSelectedFrame();
        if (vi2 != null) {
            vi_p = vi2.getLocation();
            vi_p.setLocation(vi_p.x+15, vi_p.y+15);
            vi.setLocation(vi_p);
        } 
        vi.setVisible(true);
        BufferedImage img;
        // img = new BufferedImage(300,300, BufferedImage.TYPE_INT_ARGB);
        img = new BufferedImage(size_vi_a, size_vi_b, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2dvp = img.createGraphics();
        g2dvp.setStroke(new BasicStroke(5.0f, 
                                    BasicStroke.CAP_ROUND,
                                    BasicStroke.JOIN_MITER, 1.0f,
                                    patronDiscontinuidad, 0.0f)); 
        clipArea = new RoundRectangle2D.Float(0,0,img.getHeight(), img.getWidth(),15,15);
        // System.out.println(rect.toString() + "\n" + g2dvp.getStroke().toString());
        
        g2dvp.setPaint(Color.WHITE);
        g2dvp.fillRect(0, 0, img.getHeight(), img.getWidth());
        g2dvp.setPaint(Color.BLACK);
        g2dvp.clip(clipArea);
        g2dvp.draw(clipArea);
        vi.getLienzo().setImage(img);
    }//GEN-LAST:event_nuevoActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
        // Opening file
        JFileChooser dlg = new JFileChooser();
        //  FileNameExtensionFilter filter = new FileNameExtensionFilter("Imágenes(.jpg)", "jpg");
        dlg.setFileFilter(new FileNameExtensionFilter("Imágenes PNG (*.png)", "png"));
        dlg.setFileFilter(new FileNameExtensionFilter("Imágenes JPG (*.jpg)", "jpg"));
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna(this);
                Graphics2D g2dvp = img.createGraphics();
                clipArea = new Rectangle2D.Float(0,0,img.getWidth(),img.getHeight());
                g2dvp.setClip(clipArea);
                vi.getLienzo().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_openActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        // Saving file
        VentanaInterna vi=(VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            dlg.setFileFilter(new FileNameExtensionFilter("Imágenes PNG (*.png)", "png"));
            dlg.setFileFilter(new FileNameExtensionFilter("Imágenes JPG (*.jpg)", "jpg"));
            int resp = dlg.showSaveDialog(this);
            
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = new File(dlg.getSelectedFile()+".jpg");
                        String filename = f.getName();
                        String file_extension = filename.substring(filename.lastIndexOf(".")+1, filename.length());
                        System.out.println(file_extension);
                        ImageIO.write(img, file_extension, f);
                        vi.setTitle(f.getName());
                    }
                }catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jToggleButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton11ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (!vi.getLienzo().get_editar()) {
            vi.getLienzo().set_editar(true);
            this.jToggleButton1.setSelected(false);
            this.jToggleButton2.setSelected(false);
            this.jToggleButton3.setSelected(false);
            this.jToggleButton4.setSelected(false);
            this.jLabel1.setText("Editar");
            vi.getLienzo().repaint();
        } else {
            vi.getLienzo().set_editar(false);
        }
    }//GEN-LAST:event_jToggleButton11ActionPerformed

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        vi.getLienzo().set_grosor((int) this.jSpinner2.getValue());
        // System.out.println("Grosor = " + vi.getLienzo().get_grosor());
        vi.getLienzo().repaint();
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jToggleButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton12ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (!vi.getLienzo().get_fill()) {
            vi.getLienzo().set_fill(true);
        } else {
            vi.getLienzo().set_fill(false);
        }
        vi.getLienzo().repaint();
    }//GEN-LAST:event_jToggleButton12ActionPerformed

    private void jToggleButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton13ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (!vi.getLienzo().get_transparencia()) {
            vi.getLienzo().set_transparencia(true);
        } else {
            vi.getLienzo().set_transparencia(false);
        }
        vi.getLienzo().repaint();
    }//GEN-LAST:event_jToggleButton13ActionPerformed

    private void jToggleButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton14ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (!vi.getLienzo().get_alisar()) {
            vi.getLienzo().set_alisar(true);
        } else {
            vi.getLienzo().set_alisar(false);
        }
        vi.getLienzo().repaint();
    }//GEN-LAST:event_jToggleButton14ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        ComboBoxModel<Color> b = this.jComboBox1.getModel();
        Object b1 = b.getSelectedItem();
        vi.getLienzo().set_color((Color)b1);
        // System.out.println(b1.toString());
        // this.jComboBox1.getModel().getElementAt();
        this.repaint();        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        if (!this.jCheckBoxMenuItem1.isSelected()) {
            this.jLabel1.setVisible(false);
        } else {
            this.jLabel1.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void abrirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirItemActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Imágenes(.jpg)", "jpg");
        dlg.setFileFilter(filter);
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna(this);
                vi.getLienzo().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_abrirItemActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        // TODO add your handling code here:
        if (!this.jCheckBoxMenuItem2.isSelected()) {
            this.jToggleButton1.setVisible(false);
            this.jToggleButton2.setVisible(false);
            this.jToggleButton3.setVisible(false);
            this.jToggleButton4.setVisible(false);
            this.jToggleButton11.setVisible(false);
            this.jSeparator2.setVisible(false);
        } else {
            this.jToggleButton1.setVisible(true);
            this.jToggleButton2.setVisible(true);
            this.jToggleButton3.setVisible(true);
            this.jToggleButton4.setVisible(true);
            this.jToggleButton11.setVisible(true);
            this.jSeparator2.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jCheckBoxMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ActionPerformed
        // TODO add your handling code here:
        if (!this.jCheckBoxMenuItem3.isSelected()) {
            this.jToggleButton12.setVisible(false);
            this.jToggleButton13.setVisible(false);
            this.jToggleButton14.setVisible(false);
            this.jSpinner2.setVisible(false);
            this.jComboBox1.setVisible(false);
            this.jSeparator1.setVisible(false);
        } else {
            this.jToggleButton12.setVisible(true);
            this.jToggleButton13.setVisible(true);
            this.jToggleButton14.setVisible(true);
            this.jSpinner2.setVisible(true);
            this.jComboBox1.setVisible(true);
            this.jSeparator1.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBoxMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        VI_Size vi_size = new VI_Size(this);
        vi_size.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void nuevoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nuevoKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_nuevoKeyPressed

    private void sliderBrilloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderBrilloFocusGained
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi != null) {
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgOrigen = new BufferedImage(cm,raster,alfaPre,null);
        }
    }//GEN-LAST:event_sliderBrilloFocusGained

    private void sliderBrilloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderBrilloFocusLost
        // TODO add your handling code here:
        imgOrigen = null;
    }//GEN-LAST:event_sliderBrilloFocusLost

    private void sliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderBrilloStateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        this.brillo = this.sliderBrillo.getValue();
        RescaleOp rop =  new RescaleOp(1.0F, brillo ,null);
        rop.filter(imgOrigen,vi.getLienzo().getImage());
        // this.repaint();
        this.escritorio.repaint();
    }//GEN-LAST:event_sliderBrilloStateChanged

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        BufferedImage imgSource = vi.getLienzo().getImage();
        Kernel k = null;
        String option = (String) this.jComboBox2.getSelectedItem();
        switch (option) {
            case "Media":
                k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                break;
            case "Binomial":
                k = KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                break;
            case "Enfoque":
                k = KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                break;
            case "Relieve":
                k = KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                break;
            case "Fronteras":
                k = KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                break;
            default:
                k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                break;
        }
        ConvolveOp cop = new ConvolveOp(k);
        BufferedImage imgDest = cop.filter(imgSource, null);
        vi.getLienzo().setImage(imgDest);
        // System.out.println(b1.toString());
        // this.jComboBox1.getModel().getElementAt();
        this.repaint();        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jMenuLookUpOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLookUpOpActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    LookupTable lt = LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_POWER);
                    LookupOp lop = new LookupOp (lt, null);
                    lop.filter(imgSource, imgSource);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jMenuLookUpOpActionPerformed

    private void jMenuAffineTransformOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAffineTransformOpActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    double r = Math.toRadians(180);
                    Point c = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, c.x, c.y);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jMenuAffineTransformOpActionPerformed

    private void contrasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrasteActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    LookupTable lt = LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_SFUNCION);
                    LookupOp lop = new LookupOp (lt, null);
                    lop.filter(imgSource, imgSource);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_contrasteActionPerformed

    private void iluminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iluminarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    LookupTable lt = LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_LOGARITHM);
                    LookupOp lop = new LookupOp (lt, null);
                    lop.filter(imgSource, imgSource);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_iluminarActionPerformed

    private void oscurecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oscurecerActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    LookupTable lt = LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_POWER);
                    LookupOp lop = new LookupOp (lt, null);
                    lop.filter(imgSource, imgSource);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_oscurecerActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            Point c = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    this.grados = this.jSlider1.getValue();
                    System.out.println("Grados: " + grados);
                    double r = Math.toRadians(grados);
                    // Point c = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, c.x, c.y);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
        this.repaint();
        // Poner null y hacer un setimagen en el lienzo correspondiente
    }//GEN-LAST:event_jSlider1StateChanged
    
    private void sinosoidalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinosoidalActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    LookupTable lte = LookupTableExtension.seno(180.0);
                    LookupOp lop = new LookupOp (lte, null);
                    lop.filter(imgSource, imgSource);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_sinosoidalActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    AffineTransform at = AffineTransform.getScaleInstance(1.25,1.25);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    AffineTransform at = AffineTransform.getScaleInstance(0.75,0.75);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    double r = Math.toRadians(90);
                    Point c = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, c.x, c.y);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    double r = Math.toRadians(180);
                    Point c = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, c.x, c.y);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    double r = Math.toRadians(270);
                    Point c = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, c.x, c.y);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgdest = atop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jSlider1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider1FocusGained
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi != null) {
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgOrigen = new BufferedImage(cm,raster,alfaPre,null);
        }
        
    }//GEN-LAST:event_jSlider1FocusGained

    private void bandCombineOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bandCombineOpActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (vi != null) {
            
            /*float [][] m = {{1.0F,0.0F,0.0F},{0.0F,0.0F,1.0F},{0.0F,1.0F,0.0F}};
            BandCombineOp bcop = new BandCombineOp(m, null);
            WritableRaster rasterDest = bcop.filter(vi.getLienzo().getImage().getRaster(), null);*/
            
            for (int i=0; i<vi.getLienzo().getImage().getRaster().getNumBands(); ++i) {
                BufferedImage imgDest = vi.getLienzo().getBanda(vi.getLienzo().getImage(), i);
                VentanaInterna vi2 = new VentanaInterna(this);
                this.escritorio.add(vi2);
                vi2.getLienzo().setImage(imgDest);
                vi2.setVisible(true);            
            }
            
        }
    }//GEN-LAST:event_bandCombineOpActionPerformed

    private void bandasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bandasActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        if (vi != null) {
            
            /*float [][] m = {{1.0F,0.0F,0.0F},{0.0F,0.0F,1.0F},{0.0F,1.0F,0.0F}};
            BandCombineOp bcop = new BandCombineOp(m, null);
            WritableRaster rasterDest = bcop.filter(vi.getLienzo().getImage().getRaster(), null);*/
            
            for (int i=0; i<vi.getLienzo().getImage().getRaster().getNumBands(); ++i) {
                BufferedImage imgDest = vi.getLienzo().getBanda(vi.getLienzo().getImage(), i);
                VentanaInterna vi2 = new VentanaInterna(this);
                VentanaInterna vi3;
                vi3 = (VentanaInterna)escritorio.getSelectedFrame();
                this.escritorio.add(vi2);
                vi2.getLienzo().setImage(imgDest);
                vi2.setVisible(true);        
                vi_p = vi3.getLocation();
                vi_p.setLocation(vi_p.x+15, vi_p.y+15);
                vi2.setLocation(vi_p);
            }
            
        }
    }//GEN-LAST:event_bandasActionPerformed

    private void sepiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sepiaActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if(imgSource!=null){
                try{
                    // LookupOp lp = new LookupOp();
                    SepiaOp seop = new SepiaOp();
                    BufferedImage imgDest = null;
                    imgDest = seop.filter(imgSource, imgDest);
                    vi.getLienzo().setImage(imgDest);
                    vi.getLienzo().repaint();
                } catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_sepiaActionPerformed

    private void espaciocolorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_espaciocolorActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi;
        vi = (VentanaInterna)this.escritorio.getSelectedFrame();
        String color_space = (String) this.espaciocolor.getSelectedItem();
        BufferedImage src = vi.getLienzo().getImage();
        BufferedImage imgOut = null;
        ColorConvertOp cop = null;
        switch(color_space) {
            case "sRGB":
                if (src.getColorModel().getColorSpace().isCS_sRGB()) {
                    imgOut = src;
                } else {
                    ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);
                    cop = new ColorConvertOp(cs, null);
                }
                break;
            case "YCC":
                if (src.getColorModel().getColorSpace().isCS_sRGB() ||
                        src.getColorModel().getColorSpace().getType() == ColorSpace.CS_GRAY) {
                    ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_PYCC);
                    cop = new ColorConvertOp(cs, null);
                } else {
                    imgOut = src;
                }
                break;
            case "GREY":
                if (src.getColorModel().getColorSpace().isCS_sRGB() || 
                        src.getColorModel().getColorSpace().getType() == ColorSpace.CS_PYCC) {
                    ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);
                    cop = new ColorConvertOp(cs, null);
                } else {
                    imgOut = src;
                }
                break;
            default:
                if (src.getColorModel().getColorSpace().isCS_sRGB()) {
                    ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_PYCC);
                    cop = new ColorConvertOp(cs, null);
                } else if (src.getColorModel().getColorSpace().getType() == ColorSpace.CS_GRAY ||
                        src.getColorModel().getColorSpace().getType() == ColorSpace.CS_PYCC) {
                    ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);
                    cop = new ColorConvertOp(cs, null);
                }
                break;
        }
        
        
        imgOut = cop.filter(src, null);
        // Mostramos la imagen final por pantalla
        VentanaInterna vi2 = new VentanaInterna(this);
        this.escritorio.add(vi2);
        vi2.getLienzo().setImage(imgOut);
        vi2.setVisible(true);
        vi_p = vi.getLocation();
        vi_p.setLocation(vi_p.x+15, vi_p.y+15);
        vi2.setLocation(vi_p);
        
    }//GEN-LAST:event_espaciocolorActionPerformed
    
    public void set_imgx_imgy (int imgx, int imgy) {
        VentanaInterna vi;
        vi = (VentanaInterna)escritorio.getSelectedFrame();
        vi.set_imgx(imgx);
        vi.set_imgy(imgy);
        
    }
    public void set_jlabel2 (int x, int y) {
        this.jLabel2.setText("(" + x + ", " + y + ")");
    }
    public void set_lienzo_atributos(String s, Color c ,boolean transparencia,
            boolean fill, float grosor, boolean alisar, boolean editar){
        switch (s) {
            case "punto":
                this.jToggleButton1.setSelected(true);
                this.jToggleButton2.setSelected(false);
                this.jToggleButton3.setSelected(false);
                this.jToggleButton4.setSelected(false);
                this.jToggleButton11.setSelected(false);
                this.jLabel1.setText("Punto");
                break;
            case "linea":
                this.jToggleButton1.setSelected(false);
                this.jToggleButton2.setSelected(true);
                this.jToggleButton3.setSelected(false);
                this.jToggleButton4.setSelected(false);
                this.jToggleButton11.setSelected(false);
                this.jLabel1.setText("Línea");
                break;
            case "rectangulo":
                this.jToggleButton1.setSelected(false);
                this.jToggleButton2.setSelected(false);
                this.jToggleButton3.setSelected(true);
                this.jToggleButton4.setSelected(false);
                this.jToggleButton11.setSelected(false);
                this.jLabel1.setText("Rectangulo");
                break;
            case "ellipse":
                this.jToggleButton1.setSelected(false);
                this.jToggleButton2.setSelected(false);
                this.jToggleButton3.setSelected(false);
                this.jToggleButton4.setSelected(true);
                this.jToggleButton11.setSelected(false);
                this.jLabel1.setText("Punto");
                break;
        }
        if (editar) {
            this.jToggleButton1.setSelected(false);
            this.jToggleButton2.setSelected(false);
            this.jToggleButton3.setSelected(false);
            this.jToggleButton4.setSelected(false);
            this.jToggleButton11.setSelected(true);
            this.jLabel1.setText("Editar");
        }
        if (transparencia) {
            this.jToggleButton13.setSelected(true);
        } else {
            this.jToggleButton13.setSelected(false);
        }
        if (fill) {
            this.jToggleButton12.setSelected(true);
        } else {
            this.jToggleButton12.setSelected(false);
        }
        if (alisar) {
            this.jToggleButton14.setSelected(true);
        } else {
            this.jToggleButton14.setSelected(false);
        }
        
        JButton b = new JButton();
        // ComboBoxModel<Color> cb = (ComboBoxModel<Color>) this.jComboBox1.getSelectedItem();
        // System.out.println(cb.toString());
        // Object b1 = cb.setSelectedItem(b);
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirItem;
    private javax.swing.JMenuItem bandCombineOp;
    private javax.swing.JButton bandas;
    private javax.swing.JButton contraste;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JComboBox<String> espaciocolor;
    private javax.swing.JMenuItem guardarItem;
    private javax.swing.JButton iluminar;
    private javax.swing.JMenu imageData;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JComboBox<Color> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuAffineTransformOp;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuLookUpOp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton11;
    private javax.swing.JToggleButton jToggleButton12;
    private javax.swing.JToggleButton jToggleButton13;
    private javax.swing.JToggleButton jToggleButton14;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JMenuItem newItem;
    private javax.swing.JButton nuevo;
    private javax.swing.JButton open;
    private javax.swing.JButton oscurecer;
    private javax.swing.JButton save;
    private javax.swing.JButton sepia;
    private javax.swing.JButton sinosoidal;
    private javax.swing.JSlider sliderBrillo;
    // End of variables declaration//GEN-END:variables
}
