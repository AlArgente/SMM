/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica5;

import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.TextAttribute;
import java.awt.geom.*;
import java.util.ArrayList;
import java.util.Map;

/**
 *
 * @author alberto
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    
    Point pAux = new Point();
    // Line2D l = new Line2D.Float(p1,p2);
    Line2D l;
    Rectangle rectangle;
    ArrayList<Shape> vShape = new ArrayList();
    boolean editar = false;
    boolean ventanaClipActiva = false;
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jRadioButton1.setText("Editar");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1);

        jRadioButton2.setText("Relleno");
        jPanel1.add(jRadioButton2);

        jRadioButton3.setText("VerCortado");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        l = new Line2D.Float(evt.getPoint(), evt.getPoint());
        vShape.add(l);
        pAux = evt.getPoint();
        rectangle = new Rectangle(pAux);
        vShape.add(rectangle);
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
       l.setLine(this.l.getP1(), evt.getPoint());
       rectangle.setFrameFromDiagonal(pAux, evt.getPoint());
       
       this.repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        this.formMouseDragged(evt);
    }//GEN-LAST:event_formMouseReleased

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if (this.jRadioButton1.isSelected())
            editar = true;
        else 
            editar = false;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        if (this.jRadioButton3.isSelected()){
            ventanaClipActiva = true;
        } else {
            ventanaClipActiva = false;
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
        if (ventanaClipActiva) {
            Point corner = evt.getPoint();
            //corner.translate((int)clipArea.getWidth()/2, (int)clipArea.getWidth()/2);
            //clipArea.setFrameFromCenter(evt.getPoint(), corner);
            this.repaint();
        }
    }//GEN-LAST:event_formMouseMoved

    public void pruebaShape(Graphics2D g2d){
        QuadCurve2D q = new QuadCurve2D.Float();
        q.setCurve(10, 10, 300, 10, 180, 180);
        g2d.draw(q);
        Point2D p1 = new Point2D.Float(20,20);
        Point2D p2 = new Point2D.Float(100,100);
        Line2D line = new Line2D.Float(p1,p2);
        g2d.draw(line);
        // line.getBounds().getCenterX();
        // line.getBounds().getCenterY();
        // line.getBounds2D().getCenterX();
        // line.getBounds2D().getCenterY();
        Shape s = new Rectangle2D.Float(10, 10, 50, 50);
        g2d.draw(s);
        CubicCurve2D c = new CubicCurve2D.Float();
        c.setCurve(10, 10, 300, 60, 60, 300, 300, 300);
        g2d.draw(c);
        Shape s1 = new RoundRectangle2D.Float(10, 10, 100, 100, 15, 15);
        g2d.draw(s1);
    }
    
    private Shape getSelectedShape(Point2D p){
        for (Shape s:vShape) {
            if(s.contains(p)) return s;
        }
        return null;
    }
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics2D g2d = (Graphics2D)g;
        // pruebaShape(g2d);
        setAtributos(g2d);
        if (l!=null) g2d.draw(l);
        if (rectangle != null) g2d.draw(rectangle);
        Shape clipArea;
         clipArea = new Ellipse2D.Float(100, 100, 500, 500);
        if (ventanaClipActiva){
           g2d.setClip(clipArea);
           g2d.draw(clipArea);
        }
        for(Shape s:vShape) g2d.draw(s);
    }

    private void setAtributos(Graphics2D g2d) {
        // Trazo
        Stroke trazo;
        float patronDiscontinuidad[] = {15.0f, 15.0f};
        trazo = new BasicStroke(5.0f, 
                                    BasicStroke.CAP_ROUND,
                                    BasicStroke.JOIN_MITER, 1.0f,
                                    patronDiscontinuidad, 0.0f);
                
        g2d.setStroke(trazo);
        g2d.draw(new Line2D.Float(40.0f, 40.0f, 160.0f, 160.0f));
        
        // Relleno
        Paint relleno;
        relleno = new Color(255, 100, 0);
        g2d.setPaint(relleno);
        g2d.draw(new Rectangle2D.Float(170, 40, 120, 120));
        g2d.fill(new Rectangle2D.Float(300, 40, 120, 120));
        
        Point2D pc1 = new Point2D.Float(430,40), pc2 = new Point2D.Float(550, 160);
        relleno = new GradientPaint(pc1, Color.RED, pc2, Color.BLUE);
        g2d.setPaint(relleno);
        
        g2d.fill(new Rectangle2D.Float(430, 40, 120, 120));
        
        // Composición
        Composite comp;
        comp = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);
        g2d.setComposite(comp);
        
        g2d.fill(new Rectangle(190, 100, 200, 120));
        
        // Transformación
        Rectangle r = new Rectangle(430, 190, 120, 120);
        g2d.draw(r); // Dibujamos el rectángulo sin transformación
        
        AffineTransform at;
        at = AffineTransform.getRotateInstance(Math.toRadians(45.0),
                                                r.getCenterX(),
                                                r.getCenterY());
        
        g2d.setTransform(at);
        g2d.fill(r); // Dibujamos el rectángulo con la transformación
        
        // at = AffineTransform.getScaleInstance(0.5, 0.5);
        // g2d.setTransform(at);
        // g2d.draw(r);
        
        at.setToIdentity();
        at.translate(r.getCenterX(), r.getCenterY());
        at.scale(0.5, 0.5);
        at.translate(-r.getCenterX(), -r.getCenterY());
        g2d.transform(at);
        g2d.draw(r);
        
        at.setToIdentity();
        at.translate(r.getCenterX(), r.getCenterY());
        at.scale(0.25, 0.25);
        at.rotate(45.0);
        at.translate(-r.getCenterX(), -r.getCenterY());
        g2d.setTransform(at);
        g2d.draw(r);
        
        at.setToIdentity();
        g2d.setTransform(at);
        // método set to identity de un GeometryTransform para cargar la identidad
        
        // Fuente
        Font fuente;
        fuente = new Font("Arial", Font.BOLD | Font.ITALIC, 45);
        g2d.setFont(fuente);
        g2d.drawString("Hola", 30, 220);
        
        Map atributosTexto = fuente.getAttributes();
        atributosTexto.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        g2d.setFont( new Font(atributosTexto) );
        g2d.drawString("mundo", 30, 260);
        
        // Renderización
        RenderingHints render;
        g2d.draw(new Ellipse2D.Float(40,350,510,50));
        
        render = new RenderingHints( RenderingHints.KEY_ANTIALIASING,
                                     RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setRenderingHints(render);
        
        g2d.draw( new Ellipse2D.Float(40,450,510,50));
        g2d.drawString("Hola", 30, 170);
                
        // Recorte
        Shape clipArea;
        clipArea = new Ellipse2D.Float(100, 100, 500, 500);
        if (!ventanaClipActiva){
            //g2d.setClip(clipArea);
            //g2d.draw(clipArea);
        }
        
        //g2d.setClip(clipArea);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    // End of variables declaration//GEN-END:variables
}

/*


*/